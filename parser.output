State 45 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 49 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: translation_unit

    2 stmt_list: stmt
    3          | stmt_list stmt

    4 translation_unit: top_item
    5                 | translation_unit top_item

    6 top_item: stmt
    7         | func_decl

    8 stmt: decl
    9     | assign
   10     | print_stmt

   11 decl: INT ID ';'
   12     | INT ID '[' NUM ']' ';'

   13 assign: ID '=' expr ';'
   14       | ID '[' expr ']' '=' expr ';'

   15 expr: primary
   16     | expr '+' expr
   17     | expr '-' expr
   18     | expr '*' expr
   19     | expr '/' expr

   20 primary: NUM
   21        | ID
   22        | ID '[' expr ']'
   23        | ID '(' ')'
   24        | '(' expr ')'

   25 print_stmt: PRINT '(' expr ')' ';'

   26 func_decl: FUNC ID '(' ')' '{' stmt_list return_stmt '}'

   27 return_stmt: RETURN expr ';'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 23 24 25 26
')' (41) 23 24 25 26
'*' (42) 18
'+' (43) 16
'-' (45) 17
'/' (47) 19
';' (59) 11 12 13 14 25 27
'=' (61) 13 14
'[' (91) 12 14 22
']' (93) 12 14 22
'{' (123) 26
'}' (125) 26
error (256)
NUM (258) 12 20
ID (259) 11 12 13 14 21 22 23 26
INT (260) 11 12
PRINT (261) 25
RETURN (262) 27
FUNC (263) 26


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
program (22)
    on left: 1, on right: 0
stmt_list (23)
    on left: 2 3, on right: 3 26
translation_unit (24)
    on left: 4 5, on right: 1 5
top_item (25)
    on left: 6 7, on right: 4 5
stmt (26)
    on left: 8 9 10, on right: 2 3 6
decl (27)
    on left: 11 12, on right: 8
assign (28)
    on left: 13 14, on right: 9
expr (29)
    on left: 15 16 17 18 19, on right: 13 14 16 17 18 19 22 24 25 27
primary (30)
    on left: 20 21 22 23 24, on right: 15
print_stmt (31)
    on left: 25, on right: 10
func_decl (32)
    on left: 26, on right: 7
return_stmt (33)
    on left: 27, on right: 26


state 0

    0 $accept: . program $end

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    PRINT  shift, and go to state 3
    FUNC   shift, and go to state 4

    program           go to state 5
    translation_unit  go to state 6
    top_item          go to state 7
    stmt              go to state 8
    decl              go to state 9
    assign            go to state 10
    print_stmt        go to state 11
    func_decl         go to state 12


state 1

   13 assign: ID . '=' expr ';'
   14       | ID . '[' expr ']' '=' expr ';'

    '['  shift, and go to state 13
    '='  shift, and go to state 14


state 2

   11 decl: INT . ID ';'
   12     | INT . ID '[' NUM ']' ';'

    ID  shift, and go to state 15


state 3

   25 print_stmt: PRINT . '(' expr ')' ';'

    '('  shift, and go to state 16


state 4

   26 func_decl: FUNC . ID '(' ')' '{' stmt_list return_stmt '}'

    ID  shift, and go to state 17


state 5

    0 $accept: program . $end

    $end  shift, and go to state 18


state 6

    1 program: translation_unit .
    5 translation_unit: translation_unit . top_item

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    PRINT  shift, and go to state 3
    FUNC   shift, and go to state 4

    $default  reduce using rule 1 (program)

    top_item    go to state 19
    stmt        go to state 8
    decl        go to state 9
    assign      go to state 10
    print_stmt  go to state 11
    func_decl   go to state 12


state 7

    4 translation_unit: top_item .

    $default  reduce using rule 4 (translation_unit)


state 8

    6 top_item: stmt .

    $default  reduce using rule 6 (top_item)


state 9

    8 stmt: decl .

    $default  reduce using rule 8 (stmt)


state 10

    9 stmt: assign .

    $default  reduce using rule 9 (stmt)


state 11

   10 stmt: print_stmt .

    $default  reduce using rule 10 (stmt)


state 12

    7 top_item: func_decl .

    $default  reduce using rule 7 (top_item)


state 13

   14 assign: ID '[' . expr ']' '=' expr ';'

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 23
    primary  go to state 24


state 14

   13 assign: ID '=' . expr ';'

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 25
    primary  go to state 24


state 15

   11 decl: INT ID . ';'
   12     | INT ID . '[' NUM ']' ';'

    ';'  shift, and go to state 26
    '['  shift, and go to state 27


state 16

   25 print_stmt: PRINT '(' . expr ')' ';'

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 28
    primary  go to state 24


state 17

   26 func_decl: FUNC ID . '(' ')' '{' stmt_list return_stmt '}'

    '('  shift, and go to state 29


state 18

    0 $accept: program $end .

    $default  accept


state 19

    5 translation_unit: translation_unit top_item .

    $default  reduce using rule 5 (translation_unit)


state 20

   20 primary: NUM .

    $default  reduce using rule 20 (primary)


state 21

   21 primary: ID .
   22        | ID . '[' expr ']'
   23        | ID . '(' ')'

    '['  shift, and go to state 30
    '('  shift, and go to state 31

    $default  reduce using rule 21 (primary)


state 22

   24 primary: '(' . expr ')'

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 32
    primary  go to state 24


state 23

   14 assign: ID '[' expr . ']' '=' expr ';'
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ']'  shift, and go to state 36
    '-'  shift, and go to state 37


state 24

   15 expr: primary .

    $default  reduce using rule 15 (expr)


state 25

   13 assign: ID '=' expr . ';'
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ';'  shift, and go to state 38
    '-'  shift, and go to state 37


state 26

   11 decl: INT ID ';' .

    $default  reduce using rule 11 (decl)


state 27

   12 decl: INT ID '[' . NUM ']' ';'

    NUM  shift, and go to state 39


state 28

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   25 print_stmt: PRINT '(' expr . ')' ';'

    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    '-'  shift, and go to state 37
    ')'  shift, and go to state 40


state 29

   26 func_decl: FUNC ID '(' . ')' '{' stmt_list return_stmt '}'

    ')'  shift, and go to state 41


state 30

   22 primary: ID '[' . expr ']'

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 42
    primary  go to state 24


state 31

   23 primary: ID '(' . ')'

    ')'  shift, and go to state 43


state 32

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   24 primary: '(' expr . ')'

    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    '-'  shift, and go to state 37
    ')'  shift, and go to state 44


state 33

   16 expr: expr '+' . expr

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 45
    primary  go to state 24


state 34

   18 expr: expr '*' . expr

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 46
    primary  go to state 24


state 35

   19 expr: expr '/' . expr

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 47
    primary  go to state 24


state 36

   14 assign: ID '[' expr ']' . '=' expr ';'

    '='  shift, and go to state 48


state 37

   17 expr: expr '-' . expr

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 49
    primary  go to state 24


state 38

   13 assign: ID '=' expr ';' .

    $default  reduce using rule 13 (assign)


state 39

   12 decl: INT ID '[' NUM . ']' ';'

    ']'  shift, and go to state 50


state 40

   25 print_stmt: PRINT '(' expr ')' . ';'

    ';'  shift, and go to state 51


state 41

   26 func_decl: FUNC ID '(' ')' . '{' stmt_list return_stmt '}'

    '{'  shift, and go to state 52


state 42

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   22 primary: ID '[' expr . ']'

    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ']'  shift, and go to state 53
    '-'  shift, and go to state 37


state 43

   23 primary: ID '(' ')' .

    $default  reduce using rule 23 (primary)


state 44

   24 primary: '(' expr ')' .

    $default  reduce using rule 24 (primary)


state 45

   16 expr: expr . '+' expr
   16     | expr '+' expr .
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    '-'  shift, and go to state 37

    '-'       [reduce using rule 16 (expr)]
    $default  reduce using rule 16 (expr)


state 46

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   18     | expr '*' expr .
   19     | expr . '/' expr

    '-'  shift, and go to state 37

    '-'       [reduce using rule 18 (expr)]
    $default  reduce using rule 18 (expr)


state 47

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   19     | expr '/' expr .

    '-'  shift, and go to state 37

    '-'       [reduce using rule 19 (expr)]
    $default  reduce using rule 19 (expr)


state 48

   14 assign: ID '[' expr ']' '=' . expr ';'

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 54
    primary  go to state 24


state 49

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   17     | expr '-' expr .
   18     | expr . '*' expr
   19     | expr . '/' expr

    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    '-'  shift, and go to state 37

    '+'       [reduce using rule 17 (expr)]
    '*'       [reduce using rule 17 (expr)]
    '/'       [reduce using rule 17 (expr)]
    '-'       [reduce using rule 17 (expr)]
    $default  reduce using rule 17 (expr)


state 50

   12 decl: INT ID '[' NUM ']' . ';'

    ';'  shift, and go to state 55


state 51

   25 print_stmt: PRINT '(' expr ')' ';' .

    $default  reduce using rule 25 (print_stmt)


state 52

   26 func_decl: FUNC ID '(' ')' '{' . stmt_list return_stmt '}'

    ID     shift, and go to state 1
    INT    shift, and go to state 2
    PRINT  shift, and go to state 3

    stmt_list   go to state 56
    stmt        go to state 57
    decl        go to state 9
    assign      go to state 10
    print_stmt  go to state 11


state 53

   22 primary: ID '[' expr ']' .

    $default  reduce using rule 22 (primary)


state 54

   14 assign: ID '[' expr ']' '=' expr . ';'
   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr

    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ';'  shift, and go to state 58
    '-'  shift, and go to state 37


state 55

   12 decl: INT ID '[' NUM ']' ';' .

    $default  reduce using rule 12 (decl)


state 56

    3 stmt_list: stmt_list . stmt
   26 func_decl: FUNC ID '(' ')' '{' stmt_list . return_stmt '}'

    ID      shift, and go to state 1
    INT     shift, and go to state 2
    PRINT   shift, and go to state 3
    RETURN  shift, and go to state 59

    stmt         go to state 60
    decl         go to state 9
    assign       go to state 10
    print_stmt   go to state 11
    return_stmt  go to state 61


state 57

    2 stmt_list: stmt .

    $default  reduce using rule 2 (stmt_list)


state 58

   14 assign: ID '[' expr ']' '=' expr ';' .

    $default  reduce using rule 14 (assign)


state 59

   27 return_stmt: RETURN . expr ';'

    NUM  shift, and go to state 20
    ID   shift, and go to state 21
    '('  shift, and go to state 22

    expr     go to state 62
    primary  go to state 24


state 60

    3 stmt_list: stmt_list stmt .

    $default  reduce using rule 3 (stmt_list)


state 61

   26 func_decl: FUNC ID '(' ')' '{' stmt_list return_stmt . '}'

    '}'  shift, and go to state 63


state 62

   16 expr: expr . '+' expr
   17     | expr . '-' expr
   18     | expr . '*' expr
   19     | expr . '/' expr
   27 return_stmt: RETURN expr . ';'

    '+'  shift, and go to state 33
    '*'  shift, and go to state 34
    '/'  shift, and go to state 35
    ';'  shift, and go to state 64
    '-'  shift, and go to state 37


state 63

   26 func_decl: FUNC ID '(' ')' '{' stmt_list return_stmt '}' .

    $default  reduce using rule 26 (func_decl)


state 64

   27 return_stmt: RETURN expr ';' .

    $default  reduce using rule 27 (return_stmt)
